The ``2-matrix_divided(matrix, div)`` module
=================================

Using ``matrix_divided``
---------------------

This is an example text file in reStructuredText format.  First import
``matrix_divided`` from the ``2-matrix_divided`` module:

	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided


"""Working Scenarios"""

"""Test: rounding, negative, & zero; also returning new matrix"""
>>> matrix = [[103, 23, -57], [9, -18, 0]]
>>> print(matrix_divided(matrix, 3))
[[34.33, 7.67, -19.0], [3.0, -6.0, 0.0]]
>>> print(matrix)
[[103, 23, -57], [9, -18, 0]]


"""Test: list of floats"""
>>> matrix = [[4.87, -9.002843, 113.2], [93, 17.883, -54.00]]
>>> print(matrix_divided(matrix, 6))
[[0.81, -1.5, 18.87], [15.5, 2.98, -9.0]]


"""Test: list of one element & large number"""
>>> matrix = [[333], [972387432109349834208349.398297934090983408230209713097], [-88.274]]
>>> print(matrix_divided(matrix, 17))
[[19.59], [5.71992607123147e+22], [-5.19]]


"""Test: div as float"""
>>> matrix = [[32, 94.42], [-183.95, -0]]
>>> print(matrix_divided(matrix, 3.5729))
[[8.96, 26.43], [-51.48, 0.0]]


"""Test: list of one list"""
>>> matrix = [[8]]
>>> print(matrix_divided(matrix, 5))
[[1.6]]


"""Test: one list"""
>>> matrix = [987]
>>> print(matrix_divided(matrix, 51.3))
Traceback (most recent call last):
	     ...
TypeError: matrix must be a matrix (list of lists) of integers/floats


"""Test: unfinished list"""
>>> matrix = [[42.3, 6,  ], [23, 62]]
>>> print(matrix_divided(matrix, 2.5))
[[16.92, 2.4], [9.2, 24.8]]


"""Test: empty matrix"""
>>> matrix = [ ]
>>> print(matrix_divided(matrix, 4.5))
Traceback (most recent call last):
	     ...
TypeError: matrix must be a matrix (list of lists) of integers/floats


"""Test:  matrix of one empty list"""
>>> matrix = [[]]
>>> print(matrix_divided(matrix, 4.5))
[[]]

"""Test: matrix as None"""
>>> matrix = [None]
>>> print(matrix_divided(matrix, 4.5))
Traceback (most recent call last):
	     ...
TypeError: matrix must be a matrix (list of lists) of integers/floats


"""Test: space in the list
>>> matrix = [[6,  62], [10, 4]]
>>> print(matrix_divided(matrix, 9))
[[0.67, 6.89], [1.11, 0.44]]


"""Test: None as extra list element"""
>>> matrix = [[3, 2, None], [3, 5]]


"""Test: div is a string"""
>>> matrix = [[2, 53], [12, -24]]
>>> print(matrix_divided(matrix, "p"))
Traceback (most recent call last):
	     ...
TypeError: div must be a number

"""Test: div as ASCII"""
>>> matrix = [[32, 5], [42, 5]]
>>> print(matrix_divided(matrix, y))
Traceback (most recent call last):
	     ...
NameError: name 'y' is not defined

"""Test: div as True boolean"""
>>> matrix = [[42, 58], [-19, 0]]
>>> print(matrix_divided(matrix, True))
Traceback (most recent call last):
	     ...
TypeError: div must be a number

"""Test: div as False boolean"""
>>> matrix = [[42, 58], [-19, 0]]
>>> print(matrix_divided(matrix, False))
Traceback (most recent call last):
	     ...
TypeError: div must be a number

"""Test: div as tuple"""
>>> matrix = [[32, 5], [42, 5]]
>>> print(matrix_divided(matrix, (4,)))
Traceback (most recent call last):
	     ...
TypeError: div must be a number


"""Test: div as dict"""
>>> matrix = [[32, 5], [42, 5]]
>>> print(matrix_divided(matrix, {3: 9}))
Traceback (most recent call last):
	     ...
TypeError: div must be a number


"""Test: div as set"""
>>> matrix = [[32, 5], [42, 5]]
>>> print(matrix_divided(matrix, {6}))
Traceback (most recent call last):
	     ...
TypeError: div must be a number


"""Test: tuples"""
>>> matrix = [(35, 26, 72), (5, 91, 100)]
>>> print(matrix_divided(matrix, 2))
Traceback (most recent call last):
	     ...
TypeError: matrix must be a matrix (list of lists) of integers/floats


"""Test: tuple of tuples"""
>>> matrix = ((827, 58), (183, 338))
>>> print(matrix_divided(matrix, 12))
Traceback (most recent call last):
	     ...
TypeError: matrix must be a matrix (list of lists) of integers/floats


"""Test: empty list"""
>>> matrix = [[], [28]]
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
	     ...
TypeError: Each row of the matrix must have the same size


"""Test: string as list element"""
>>> matrix = [["a", 43], [5, 71]]
>>> print(matrix_divided(matrix, 12))
Traceback (most recent call last):
	     ...
TypeError: matrix must be a matrix (list of lists) of integers/floats


"""Test: list of list of lists"""
>>> matrix = [[[3, 6, 15], [294, 134, 100]], [[23, 4, 1], [41, 5, 91]]]
>>> print(matrix_divided(matrix, 1.2))
Traceback (most recent call last):
	     ...
TypeError: matrix must be a matrix (list of lists) of integers/floats


"""Test: set of one element and list of one element as elements of list"""
>>> matrix = [[{54}, 8, -32], [24, [-6], 9]]
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
	     ...
TypeError: matrix must be a matrix (list of lists) of integers/floats


"""Test: list of sets"""
>>> matrix = [{24, 6, 62}, {2, 295, 12}]
>>> print(matrix_divided(matrix, 12))
Traceback (most recent call last):
	     ...
TypeError: matrix must be a matrix (list of lists) of integers/floats


"""Test: None as element"""
>>> matrix = [[None, 13], [24, 7]]
>>> print(matrix_divided(matrix, 12))
Traceback (most recent call last):
	     ...
TypeError: matrix must be a matrix (list of lists) of integers/floats



"""Test: symbol before number"""
>>> matrix = [[?4, 9], [24, --45]]
Traceback (most recent call last):
	     ...
SyntaxError: invalid syntax
>>> print(matrix_divided(matrix, 8))
Traceback (most recent call last):
	     ...
TypeError: matrix must be a matrix (list of lists) of integers/floats


"""Test: trailing comma after list"""
>>> matrix = [[29, 53, 7], ]
>>> print(matrix_divided(matrix, 3))
[[9.67, 17.67, 2.33]]


"""Test: boolean"""
>>> matrix = [[84, 14], True]
>>> print(matrix_divided(matrix, 12))
Traceback (most recent call last):
	     ...
TypeError: matrix must be a matrix (list of lists) of integers/floats


"""Test: boolean as a list element"""
>>> matrix = [[38, True], [5.81, 2]]
>>> print(matrix_divided(matrix, 12))
Traceback (most recent call last):
	     ...
TypeError: matrix must be a matrix (list of lists) of integers/floats


"""Test: Zero Division"""
>>> matrix = [[9.8, 13], [14, 502]]
>>> print(matrix_divided(matrix, 0))
Traceback (most recent call last):
	     ...
ZeroDivisionError: division by zero


"""Test: different row sizes"""
>>> matrix = [[5, 1, -3], [45, 8]]
>>> print(matrix_divided(matrix, 12))
Traceback (most recent call last):
	     ...
TypeError: Each row of the matrix must have the same size


"""Test: dict as list element"""
>>> matrix = [[{23: 19}, 83], [8, 2]]
>>> print(matrix_divided(matrix, 12))
Traceback (most recent call last):
	     ...
TypeError: matrix must be a matrix (list of lists) of integers/floats


"""Test: arithmetic inside list"""
>>> matrix = [[3, 10/2, 3*5], [4, 72, 20]]
>>> print(matrix_divided(matrix, 2))
[[1.5, 2.5, 7.5], [2.0, 36.0, 10.0]]


"""Test: missing argument"""
>>> matrix = ()
>>> print(matrix_divided(matrix, 2))
Traceback (most recent call last):
	     ...
TypeError: matrix must be a matrix (list of lists) of integers/floats


"""Test: string as argument"""
>>> matrix = "Holberton"
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
	     ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
